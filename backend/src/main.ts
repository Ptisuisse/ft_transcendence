import Fastify, { FastifyInstance } from 'fastify';

// Initialiser Fastify avec un logger pour que server.log soit disponible
const server: FastifyInstance = Fastify({
  logger: true,
});

server.get('/ping', async (request, reply) => {
  return { pong: true };
});

const startServer = async () => {
  try {
    // Ã‰couter sur 0.0.0.0 pour accepter les connexions de l'extÃ©rieur du conteneur
    // (via le rÃ©seau Docker) et de l'intÃ©rieur.
    await server.listen({ port: 3000, host: '0.0.0.0' });
    // Le logger de Fastify affichera l'adresse d'Ã©coute, donc le console.log personnalisÃ© n'est pas strictement nÃ©cessaire ici.
    // Si vous voulez un log spÃ©cifique : server.log.info(`ğŸš€ Server listening at http://0.0.0.0:3000`);
  } catch (err) {
    server.log.error(err);
    process.exit(1);
  }
};

startServer();
