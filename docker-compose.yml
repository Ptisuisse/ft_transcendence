services:
  frontend:
    build: ./frontend
    container_name: ft_frontend
    networks:
      - ft_network

  backend:
    build: ./backend
    container_name: ft_backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - ft_network

  db:
    build: ./DataBase
    container_name: ft_db
    volumes:
      - ./DataBase/data:/usr/src/app/data
    networks:
      - ft_network

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: ft_nginx
    ports:
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - ft_network
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - ft_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - ft_network

networks:
  ft_network:
    driver: bridge
volumes:
  prometheus_data: {}

