services:
  frontend:
    build: ./frontend
    container_name: ft_frontend
    networks:
      - network

  backend:
    build: ./backend
    container_name: ft_backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - network

  db:
    build: ./DataBase
    container_name: ft_db
    volumes:
      - ./DataBase/data:/usr/src/app/data
    networks:
      - network

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: ft_nginx
    ports:
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    command: -nginx.scrape-uri=http://nginx/metrics
    depends_on:
      - nginx
    networks:
      - network
    expose:
      - 9113

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - network

  prometheus:
    container_name: prometheus
    build:
      context: ./prometheus
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    expose:
      - 9090
    networks:
      - network

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
volumes:
  prometheus_data: {}

