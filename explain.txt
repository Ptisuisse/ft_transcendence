Dans ce fichier, toutes les requêtes SQL utilisant des entrées utilisateur 
(par exemple : /users, /users/:email) utilisent la syntaxe :

db.get('SELECT * FROM users WHERE email = ?', [email], ...)
db.run('INSERT INTO users(username, email) VALUES (?, ?)', [username, email], ...)

Ceci est une requête paramétrée (prepared statement), 
ce qui protège contre les injections SQL classiques.






ERROR :


L’erreur :
Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://play.google.com/log?format=json&hasfast=true&authuser=0. (Reason: CORS request did not succeed). Status code: (null).

Explication :

Cette erreur apparaît parce que votre application frontend (ou une extension, ou un script tiers) essaie de faire une requête HTTP(s) vers un domaine externe (ici, play.google.com) qui n’autorise pas les requêtes cross-origin (CORS).
Par défaut, les navigateurs bloquent les requêtes AJAX/fetch/XHR envoyées vers un autre domaine que celui du site, sauf si le serveur distant envoie des en-têtes CORS spécifiques (Access-Control-Allow-Origin).
Google ne permet pas ce type de requête sur ce point d’entrée, donc le navigateur bloque la réponse pour des raisons de sécurité.
Ce n’est pas un bug dans votre backend (Fastify/SQLite), ni dans votre code de base de données.
C’est une protection du navigateur pour empêcher des sites web d’accéder à des ressources d’autres domaines sans autorisation.

En résumé :
L’erreur est normale si vous (ou un script tiers) tentez d’accéder à une API externe qui ne gère pas CORS. Elle n’impacte pas la sécurité de votre site, mais vous ne pouvez pas lire la réponse de cette API depuis le navigateur.